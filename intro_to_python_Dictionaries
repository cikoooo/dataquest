# Dictionaries and Frequency Tables

  #1
  content_ratings = ['4+', '9+', '12+', '17+']
numbers = [4433, 987, 1155, 622]

content_rating_numbers = [content_ratings, numbers]

  #2
  content_ratings = {'4+': 4433, '9+': 987, '12+': 1155, '17+': 622}
print(content_ratings)

  #3
  content_ratings = {'4+': 4433, '9+': 987, '12+': 1155, '17+': 622}
over_9 = content_ratings['9+']
over_17 = content_ratings['17+']

print(over_9, over_17, sep = '\n')

  #4
  content_ratings = {}
content_ratings['4+'] = 4433
content_ratings['9+'] = 987
content_ratings['12+'] = 1155
content_ratings['17+'] = 622

over_12_n_apps = content_ratings['12+']
print(over_12_n_apps)

  #5
  d_1 = {'key_1': 'first_value',
       'key_2': 2,
       'key_3': 3.14,
       'key_4': True,
       'key_5': [4, 2, 1],
       'key_6': {'inner_key': 6}
      }

error = True

  #6
  content_ratings = {'4+': 4433, '9+': 987, '12+': 1155, '17+': 622}
is_in_dictionary_1 = '9+' in content_ratings
is_in_dictionary_2 = 987 in content_ratings

if '17+' in content_ratings:
    result = 'It exists'
    
print(result)

  #7
  opened_file = open('AppleStore.csv')
from csv import reader
read_file = reader(opened_file)
apps_data = list(read_file)

content_ratings = {'4+': 0,
                   '9+': 0,
                   '12+':0,
                   '17+':0
                  }

for row in apps_data[1:]:
    c_rating = row[10]
    if c_rating in content_ratings:
        content_ratings[c_rating] += 1
        
print(content_ratings)

  #8
  opened_file = open('AppleStore.csv')
from csv import reader
read_file = reader(opened_file)
apps_data = list(read_file)

content_ratings = {}

for row in apps_data[1:]:
    c_rating = row[10]
    if c_rating in content_ratings:
        content_ratings[c_rating] += 1
    else:
        content_ratings[c_rating] = 1
        
print(content_ratings)

  #9
  opened_file = open('AppleStore.csv')
from csv import reader
read_file = reader(opened_file)
apps_data = list(read_file)

genre_counting = {}

for row in apps_data[1:]:
    genre = row[11]
    if genre in genre_counting:
        genre_counting[genre] += 1
    else:
        genre_counting[genre] = 1
        
print(genre_counting)

  #10
  content_ratings = {'4+': 4433, '12+': 1155, '9+': 987, '17+': 622}
total_number_of_apps = 7197

for iteration in content_ratings:
    content_ratings[iteration] /= total_number_of_apps
    content_ratings[iteration] *= 100

percentage_17_plus = content_ratings['17+']
percentage_15_allowed = 100 - percentage_17_plus
print(content_ratings)

  #11
  content_ratings = {'4+': 4433, '12+': 1155, '9+': 987, '17+': 622}
total_number_of_apps = 7197

c_ratings_proportions = {}
c_ratings_percentages = {}

for key in content_ratings:
    proportion = content_ratings[key] / total_number_of_apps
    percentage = proportion * 100
    
    c_ratings_proportions[key] = proportion
    c_ratings_percentages[key] = percentage
    
print (c_ratings_percentages)

  #12
  opened_file = open('AppleStore.csv')
from csv import reader
read_file = reader(opened_file)
apps_data = list(read_file)

data_sizes = []

for row in apps_data[1:]:
    size = float(row[2])
    data_sizes.append(size)

min_size = min(data_sizes)
max_size = max(data_sizes)

print('Min is:', min_size, '\n'
      'Max is:', max_size)
    
 #13
 opened_file = open('AppleStore.csv')
from csv import reader
read_file = reader(opened_file)
apps_data = list(read_file)

rating_count = []
rating_freq = {'0 - 499 999': 0, '500 000 - 999 999': 0, '1 000 000 - 1 499 999': 0,
               '1 500 000 - 1 999 999': 0, '2 000 000 +': 0}

for row in apps_data[1:]:
    count = int(row[5])
    rating_count.append(count)
    if 0 <= count < 500000:
        rating_freq['0 - 499 999'] += 1
    elif 500000 <= count < 1000000:
        rating_freq['500 000 - 999 999'] += 1
    elif 1000000 <= count < 1500000:
        rating_freq['1 000 000 - 1 499 999'] += 1
    elif 1500000 <= count < 2000000:
        rating_freq['1 500 000 - 1 999 999'] += 1
    elif count >= 2000000:
        rating_freq['2 000 000 +'] += 1

rating_count_min = min(rating_count)
rating_count_max = max(rating_count)

'''print(rating_count_min, '\n',
      rating_count_max)'''

print(rating_freq)
