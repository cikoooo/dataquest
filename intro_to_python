# This contains my solutions for Dataquest.io 's path: Data Analyst in Python - Step 1 Introduction to Python.
# I did not submit couple of first practices because I was lazy.

# Programming in Python
  # These are pretty forward, try solving them by yourselves

# Variables and Data Types
  # Same as above

# List and For Loops
  # I was lazy and did not copy paste my solutions here.

# Conditional Statements
  # 1
  
  # INITIAL CODE
opened_file = open('AppleStore.csv')
from csv import reader
read_file = reader(opened_file)
apps_data = list(read_file)

free_apps_ratings = []
for row in apps_data[1:]:
    rating = float(row[7])
    price = float(row[4])
    
    if price == 0.0:
        free_apps_ratings.append(rating)

avg_rating_free = sum(free_apps_ratings) / len(free_apps_ratings)

  # 2
  
a_price = 0

if a_price == 0:
    print('This is free')
    
if a_price == 1:
    print('This is not free')

  # 3
# INITIAL CODE
opened_file = open('AppleStore.csv')
from csv import reader
read_file = reader(opened_file)
apps_data = list(read_file)

non_free_apps_ratings = []
for row in apps_data[1:]:
    rating = float(row[7])
    price = float(row[4])   
    if price != 0.0:
        non_free_apps_ratings.append(rating)
    
avg_rating_non_free = sum(non_free_apps_ratings) / len(non_free_apps_ratings)

   # 4
opened_file = open('AppleStore.csv')
from csv import reader
read_file = reader(opened_file)
apps_data = list(read_file)

non_games_ratings = []
for row in apps_data[1:]:
    rating = float(row[7])
    genre = row[11]
    if genre != 'Games':
        non_games_ratings.append(rating)
        
avg_rating_non_games = sum(non_games_ratings) / len(non_games_ratings)

   # 5
# INITIAL CODE
opened_file = open('AppleStore.csv')
from csv import reader
read_file = reader(opened_file)
apps_data = list(read_file)

free_games_ratings = []
for row in apps_data[1:]:
    rating = float(row[7])
    price = float(row[4])
    genre = row[11]
    if price == 0.0 and genre == 'Games':
        free_games_ratings.append(rating)
        
avg_rating_free_games = sum(free_games_ratings) / len(free_games_ratings)

 # 6
# INITIAL CODE
opened_file = open('AppleStore.csv')
from csv import reader
read_file = reader(opened_file)
apps_data = list(read_file)

games_social_ratings = []
for row in apps_data[1:]:
    rating = float(row[7])
    genre = row[11]
    if genre == 'Social Networking' or genre == 'Games':
        games_social_ratings.append(rating)
        
avg_games_social = sum(games_social_ratings) / len(games_social_ratings)

  # 7
opened_file = open('AppleStore.csv')
from csv import reader
read_file = reader(opened_file)
apps_data = list(read_file)

non_free_games_social_ratings = []
for row in apps_data[1:]:
    rating = float(row[7])
    genre = row[11]
    price = float(row[4])
    
    if (genre == 'Social Networking' or genre == 'Games') and price != 0:
        non_free_games_social_ratings.append(rating)
        
avg_non_free = sum(non_free_games_social_ratings) / len(non_free_games_social_ratings)

  # 8
opened_file = open('AppleStore.csv')
from csv import reader
read_file = reader(opened_file)
apps_data = list(read_file)

over_9_apps = []

for row in apps_data[1:]:
    rating = float(row[7])
    price = float(row[4])
    currency = row[3]
    if price > 9 and currency == 'USD':
        over_9_apps.append(rating)

        
n_apps_more_9 = len(over_9_apps)

avg_rating = sum(over_9_apps) / n_apps_more_9
print(avg_rating)

n_apps_less_9 = len(apps_data[1:]) - n_apps_more_9

  # 9
# INITIAL CODE
opened_file = open('AppleStore.csv')
from csv import reader
read_file = reader(opened_file)
apps_data = list(read_file)

apps_data[0].append('free_or_not')

for app in apps_data[1:]:
    price = float(app[4])
    if price == 0.0:
        app.append('free')
    else:
        app.append('non-free')

print(apps_data[:6])

 # 10
# INITIAL CODE
opened_file = open('AppleStore.csv')
from csv import reader
read_file = reader(opened_file)
apps_data = list(read_file)

apps_data[0].append('price_label')

for app in apps_data[1:]:
    price = float(app[4])
    if price == 0.0:
        app.append('free')
    elif price > 0 and price < 20:
        app.append('affordable')
    elif price >= 20 and price < 50:
        app.append('expensive')
    elif price >= 50:
        app.append('very expensive')

print(apps_data[:6])





# Dictionaries and Frequency Tables

  #1
  content_ratings = ['4+', '9+', '12+', '17+']
numbers = [4433, 987, 1155, 622]

content_rating_numbers = [content_ratings, numbers]

  #2
  content_ratings = {'4+': 4433, '9+': 987, '12+': 1155, '17+': 622}
print(content_ratings)

  #3
  content_ratings = {'4+': 4433, '9+': 987, '12+': 1155, '17+': 622}
over_9 = content_ratings['9+']
over_17 = content_ratings['17+']

print(over_9, over_17, sep = '\n')

  #4
  content_ratings = {}
content_ratings['4+'] = 4433
content_ratings['9+'] = 987
content_ratings['12+'] = 1155
content_ratings['17+'] = 622

over_12_n_apps = content_ratings['12+']
print(over_12_n_apps)

  #5
  d_1 = {'key_1': 'first_value',
       'key_2': 2,
       'key_3': 3.14,
       'key_4': True,
       'key_5': [4, 2, 1],
       'key_6': {'inner_key': 6}
      }

error = True

  #6
  content_ratings = {'4+': 4433, '9+': 987, '12+': 1155, '17+': 622}
is_in_dictionary_1 = '9+' in content_ratings
is_in_dictionary_2 = 987 in content_ratings

if '17+' in content_ratings:
    result = 'It exists'
    
print(result)

  #7
  opened_file = open('AppleStore.csv')
from csv import reader
read_file = reader(opened_file)
apps_data = list(read_file)

content_ratings = {'4+': 0,
                   '9+': 0,
                   '12+':0,
                   '17+':0
                  }

for row in apps_data[1:]:
    c_rating = row[10]
    if c_rating in content_ratings:
        content_ratings[c_rating] += 1
        
print(content_ratings)

  #8
  opened_file = open('AppleStore.csv')
from csv import reader
read_file = reader(opened_file)
apps_data = list(read_file)

content_ratings = {}

for row in apps_data[1:]:
    c_rating = row[10]
    if c_rating in content_ratings:
        content_ratings[c_rating] += 1
    else:
        content_ratings[c_rating] = 1
        
print(content_ratings)

  #9
  opened_file = open('AppleStore.csv')
from csv import reader
read_file = reader(opened_file)
apps_data = list(read_file)

genre_counting = {}

for row in apps_data[1:]:
    genre = row[11]
    if genre in genre_counting:
        genre_counting[genre] += 1
    else:
        genre_counting[genre] = 1
        
print(genre_counting)

  #10
  content_ratings = {'4+': 4433, '12+': 1155, '9+': 987, '17+': 622}
total_number_of_apps = 7197

for iteration in content_ratings:
    content_ratings[iteration] /= total_number_of_apps
    content_ratings[iteration] *= 100

percentage_17_plus = content_ratings['17+']
percentage_15_allowed = 100 - percentage_17_plus
print(content_ratings)

  #11
  content_ratings = {'4+': 4433, '12+': 1155, '9+': 987, '17+': 622}
total_number_of_apps = 7197

c_ratings_proportions = {}
c_ratings_percentages = {}

for key in content_ratings:
    proportion = content_ratings[key] / total_number_of_apps
    percentage = proportion * 100
    
    c_ratings_proportions[key] = proportion
    c_ratings_percentages[key] = percentage
    
print (c_ratings_percentages)

  #12
  opened_file = open('AppleStore.csv')
from csv import reader
read_file = reader(opened_file)
apps_data = list(read_file)

data_sizes = []

for row in apps_data[1:]:
    size = float(row[2])
    data_sizes.append(size)

min_size = min(data_sizes)
max_size = max(data_sizes)

print('Min is:', min_size, '\n'
      'Max is:', max_size)
    
 #13
 opened_file = open('AppleStore.csv')
from csv import reader
read_file = reader(opened_file)
apps_data = list(read_file)

rating_count = []
rating_freq = {'0 - 499 999': 0, '500 000 - 999 999': 0, '1 000 000 - 1 499 999': 0,
               '1 500 000 - 1 999 999': 0, '2 000 000 +': 0}

for row in apps_data[1:]:
    count = int(row[5])
    rating_count.append(count)
    if 0 <= count < 500000:
        rating_freq['0 - 499 999'] += 1
    elif 500000 <= count < 1000000:
        rating_freq['500 000 - 999 999'] += 1
    elif 1000000 <= count < 1500000:
        rating_freq['1 000 000 - 1 499 999'] += 1
    elif 1500000 <= count < 2000000:
        rating_freq['1 500 000 - 1 999 999'] += 1
    elif count >= 2000000:
        rating_freq['2 000 000 +'] += 1

rating_count_min = min(rating_count)
rating_count_max = max(rating_count)

'''print(rating_count_min, '\n',
      rating_count_max)'''

print(rating_freq)



#Functions: Fundamentals

 #1
a_list = [4444, 8897, 6340, 9896, 4835, 4324, 10, 6445,
          661, 1246, 1000, 7429, 1376, 8121, 647, 1280,
          3993, 4881, 9500, 6701, 1199, 6251, 4432, 37]

sum_manual = 0
for number in a_list:
    sum_manual += number

print(sum_manual, sum(a_list))

 #2
 ratings = ['4+', '4+', '4+', '9+', '12+', '12+', '17+', '17+']
content_ratings = {}

for element in ratings:
    if element in content_ratings:
        content_ratings[element] += 1
    else:
        content_ratings[element] = 1
        
print(content_ratings)

 #3
 def square(number):
    squared = number * number
    return squared

squared_10 = square(10)
squared_16 = square(16)

print(squared_10, squared_16)

 #4
 def add_10(number):
    return number + 10

add_30 = add_10(30)
add_90 = add_10(90)

 #5
 def square(a_number):
    return a_number * a_number

squared_6 = square(6)
squared_11 = square(11)

 #6
 opened_file = open('AppleStore.csv')
from csv import reader
read_file = reader(opened_file)
apps_data = list(read_file)

def extract(column):
    list_a = []
    for row in apps_data[1:]:
        parametr = row[column]
        list_a.append(parametr)
    return list_a

genres = extract(11)

 #7
 # CODE FROM THE PREVIOUS SCREEN
opened_file = open('AppleStore.csv')
from csv import reader
read_file = reader(opened_file)
apps_data = list(read_file)

def extract(index):
    column = []    
    for row in apps_data[1:]:
        value = row[index]
        column.append(value)    
    return column

def freq_table(column):
    directory = {}
    for value in column:
        if value in directory:
            directory[value] += 1
        else:
            directory[value] = 1
    return directory

genres = extract(11)
genres_ft = freq_table(genres)

 #8
 opened_file = open('AppleStore.csv')
from csv import reader
read_file = reader(opened_file)
apps_data = list(read_file)

def freq_table(index):
    directory = {}
    for row in apps_data[1:]:
        value = row[index]
        if value in directory:
            directory[value] += 1
        else:
            directory[value] = 1
    return directory

ratings_ft = freq_table(7)

 #9
 
