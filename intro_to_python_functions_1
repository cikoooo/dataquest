#Functions: Fundamentals

 #1
a_list = [4444, 8897, 6340, 9896, 4835, 4324, 10, 6445,
          661, 1246, 1000, 7429, 1376, 8121, 647, 1280,
          3993, 4881, 9500, 6701, 1199, 6251, 4432, 37]

sum_manual = 0
for number in a_list:
    sum_manual += number

print(sum_manual, sum(a_list))

 #2
 ratings = ['4+', '4+', '4+', '9+', '12+', '12+', '17+', '17+']
content_ratings = {}

for element in ratings:
    if element in content_ratings:
        content_ratings[element] += 1
    else:
        content_ratings[element] = 1
        
print(content_ratings)

 #3
 def square(number):
    squared = number * number
    return squared

squared_10 = square(10)
squared_16 = square(16)

print(squared_10, squared_16)

 #4
 def add_10(number):
    return number + 10

add_30 = add_10(30)
add_90 = add_10(90)

 #5
 def square(a_number):
    return a_number * a_number

squared_6 = square(6)
squared_11 = square(11)

 #6
 opened_file = open('AppleStore.csv')
from csv import reader
read_file = reader(opened_file)
apps_data = list(read_file)

def extract(column):
    list_a = []
    for row in apps_data[1:]:
        parametr = row[column]
        list_a.append(parametr)
    return list_a

genres = extract(11)

 #7
 # CODE FROM THE PREVIOUS SCREEN
opened_file = open('AppleStore.csv')
from csv import reader
read_file = reader(opened_file)
apps_data = list(read_file)

def extract(index):
    column = []    
    for row in apps_data[1:]:
        value = row[index]
        column.append(value)    
    return column

def freq_table(column):
    directory = {}
    for value in column:
        if value in directory:
            directory[value] += 1
        else:
            directory[value] = 1
    return directory

genres = extract(11)
genres_ft = freq_table(genres)

 #8
 opened_file = open('AppleStore.csv')
from csv import reader
read_file = reader(opened_file)
apps_data = list(read_file)

def freq_table(index):
    directory = {}
    for row in apps_data[1:]:
        value = row[index]
        if value in directory:
            directory[value] += 1
        else:
            directory[value] = 1
    return directory

ratings_ft = freq_table(7)

 #9
 opened_file = open('AppleStore.csv')
from csv import reader
read_file = reader(opened_file)
apps_data = list(read_file)

# INITIAL FUNCTION
def freq_table(data, index):
    frequency_table = {}
    
    for row in data[1:]:
        value = row[index]
        if value in frequency_table:
            frequency_table[value] += 1
        else:
            frequency_table[value] = 1
            
    return frequency_table

ratings_ft = freq_table(apps_data, 7)

 #10
 opened_file = open('AppleStore.csv')
from csv import reader
read_file = reader(opened_file)
apps_data = list(read_file)

def freq_table(data_set, index):
    frequency_table = {}
    
    for row in data_set[1:]:
        value = row[index]
        if value in frequency_table:
            frequency_table[value] += 1
        else:
            frequency_table[value] = 1
        
    return frequency_table


content_ratings_ft = freq_table(apps_data, 10)
ratings_ft = freq_table(data_set = apps_data, index = 7)
genres_ft = freq_table(index = 11, data_set = apps_data)

 #11
 opened_file = open('AppleStore.csv')
from csv import reader
read_file = reader(opened_file)
apps_data = list(read_file)

def extract(data_set, index):
    column = []    
    for row in data_set[1:]:
        value = row[index]
        column.append(value)    
    return column

def find_sum(a_list):
    a_sum = 0
    for element in a_list:
        a_sum += float(element)
    return a_sum

def find_length(a_list):
    length = 0
    for element in a_list:
        length += 1
    return length

def mean(data_set, index):
    a_list = extract(data_set, index)
    mean = find_sum(a_list) / find_length(a_list)
    return mean

avg_price = mean(apps_data, 4)
print(round(avg_price, 2))

 #12
 # INITIAL CODE
def extract(data_set, index):
    column = []
    
    for row in data_set[1:]:
        value = row[index]
        column.append(value)
    
    return column

def find_sum(a_list):
    a_sum = 0
    for element in a_list:
        a_sum += float(element)
    return a_sum

def find_length(a_list):
    length = 0
    for element in a_list:
        length += 1
    return length

def mean(data_set, index):
    column = extract(data_set, index)
    return find_sum(column) / find_length(column)

avg_price = mean(apps_data, 4)
avg_rating = mean(apps_data, 7)
