  #Functions: Intermediate
  
 #1
 def max(lista):
    return "No max value returned"

a_list = [1, 8, 10, 9, 7]
print(max(a_list))

max_val_test_0 = max(a_list)
del max

 #2
 #3
 # INITIAL CODE
def open_dataset(file_name='AppleStore.csv'):
    
    opened_file = open(file_name)
    from csv import reader
    read_file = reader(opened_file)
    data = list(read_file)
    
    return data

apps_data = open_dataset()
print(apps_data[:4])

 #4
 one_decimal = round(3.43, 1)
two_decimals = round(0.23321, 2)
five_decimals = round(921.2225227, 5)

 #5
 # INITIAL CODE
def open_dataset(file_name='AppleStore.csv', header=True):
    opened_file = open(file_name)
    from csv import reader
    read_file = reader(opened_file)
    data = list(read_file)
    
    if header:
        return data[1:]
    else:
        return data
    
apps_data = open_dataset()

 #6
 # INITIAL CODE
def open_dataset(file_name='AppleStore.csv', header=True):        
    opened_file = open(file_name)
    from csv import reader
    read_file = reader(opened_file)
    data = list(read_file)
    
    if header:
        return data[0], data[1:]
    else:
        return data
    
all_data = open_dataset()
header = all_data[0]
apps_data = all_data[1]

 #7
 def open_dataset(file_name='AppleStore.csv', header=True):        
    opened_file = open(file_name)
    from csv import reader
    read_file = reader(opened_file)
    data = list(read_file)
    
    if header:
        return data[0], data[1:]
    else:
        return data
    
header, apps_data = open_dataset()

 #8
 def print_constant():
    x = 3.14
    print(x)
    
print_constant()
print(x)

 #9
 e = 'mathematical constant'
a_sum = 1000
length = 50

def exponential(x):
    e = 2.72
    print(e)
    return e ** x
        
result = exponential(5)
print(e)

def divide():
    print(a_sum)
    print(length)
    return a_sum / length

result_2 = divide()
